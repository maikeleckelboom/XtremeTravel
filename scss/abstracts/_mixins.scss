// Bereken REM units op basis van pixels
@function rem-calc($val) {
  $result: $val / 16;
  @return #{$result}rem;
}

// Bereken EM units op basis van pixels
@function em-calc($val) {
  $result: $val / 16;
  @return #{$result}em;
}

// Variables
$blue: #0052CC;
$main_color: #ff3840;
$hyves: #ff9800;
$red: #e3281c;
$red2: #da4137;
//$black: #212121;
$black: #1a1a1a;
$lightblack: #1d1d1d;
$white: white;
$darkgrey: #121212;
$blacklighter: #1F1B24;


$purpleblue: #6400f4;

// Owl Pink
// Primary
$owlpink: #ff7597;

// Owl pink
$owlpink2: #ff0266;


@mixin transitionEaseAll02s {
  -webkit-transition: all 0.2s ease;
  -moz-transition: all 0.2s ease;
  -o-transition: all 0.2s ease;
}


@mixin tab-btn {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  line-height: 2.25rem;
  font-weight: 500;
  text-decoration: none;
  text-transform: uppercase;
  font-size: .875rem;
  letter-spacing: .09375rem;
  border-bottom: solid rem-calc(2) $purpleblue;
}

@mixin material-btn-stroke {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  line-height: 2.25rem;
  font-weight: 500;
  text-decoration: none;
  text-transform: uppercase;
  border: 1px solid #3c4043;
  color: #fff;
  display: inline-flex;
  padding: 0 16px 1px;
  font-size: .875rem;
  letter-spacing: .09375rem;
}

// Mixin voor het verkorten en makkelijker gebruiken van media queries
// (set-breakpoints)
@mixin set-breakpoint($object, $break: only) {
  @if map-has-key($breakpoints, $object) {
    @if $break == only {

      // Value 1 = get min-width value
      $val1 : map-get(map-get($breakpoints, $object), min);

      // Value 2  = get max-width value
      $val2 : map-get(map-get($breakpoints, $object), max);

      // Als het object gelijk is aan grootte mobile
      @if $object == mobile {
        @media screen and (max-width: $val2) {
          @content;
        }

        // Anders als het object gelijk is aan grootte widescreen (1440px).
      } @elseif $object == widescreen {
        @media screen and (min-width: $val1) {
          @content;
        }
      } @else {
        @media screen and (min-width: $val1) and (max-width: $val2) {
          @content;
        }
      }
    } @elseif $break == up {
      $val : map-get(map-get($breakpoints, $object), min);
      @if $object != mobile {
        @media screen and (min-width: $val) {
          @content;
        }
      } @else {
        @content;
      }
    } @elseif $break == down {
      $val : map-get(map-get($breakpoints, $object), max);
      @if $object != widescreen {
        @media screen and (max-width: $val) {
          @content;
        }
      } @else {
        @content;
      }
    }
  }
  @else {
    @warn 'Unknown {$object} in {$breakpoints}';
  }
}